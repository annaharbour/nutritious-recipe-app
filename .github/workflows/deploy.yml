name: Deploy

on:
  push:
    branches:
      - master
      - steve/adding-cdk-to-automate-provisioning

jobs:
  Deploy:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
#        - name: Install Node.js
#          uses: actions/setup-node@v4
#          with:
#            node-version: '20.x'
#        - name: Install npm dependencies and build for backend and client
#          run: npm run build
        - name: Deploy to Server
          uses: easingthemes/ssh-deploy@main
          with:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            ARGS: "-rlgoDzvc -i --delete"
            REMOTE_HOST: ${{ secrets.EC2_PUBLIC_IP }}
            REMOTE_USER: ec2-user
            TARGET: /home/ec2-user/app
            EXCLUDE: "/.git/, /node_modules/, /backend/node_modules/, /client/node_modules/, /.github/, /cdk/"
        - name: Setup NGINX and start API
          uses: appleboy/ssh-action@v1.0.3
          env:
            FOO: "testing!!"
            CLOUDFRONT_URL: ${{secrets.CLOUDFRONT_URL}}
#            mongoURI: ${{secrets.MONGOURI}}
            MONGO_URI: "testing too!"
            jwtSecret: ${{secrets.JWTSECRET}}
            FDC_API_KEY: ${{secrets.FDC_API_KEY}}
            GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
            GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}
            SESSION_SECRET: ${{secrets.SESSION_SECRET}}
            clientURI: ${{secrets.CLIENTURI}}
            serverURI: ${{secrets.SERVERURI}}
            PORT: ${{secrets.PORT}}
            EMAIL_USER: ${{secrets.SMTP_USER}}
            EMAIL_PASS: ${{secrets.SMTP_PASS}}
            SMTP_HOST: ${{secrets.SMTP_HOST}}
            EMAIL_ADDRESS: ${{secrets.EMAIL_ADDRESS}}
            EMAIL_PORT: ${{secrets.EMAIL_PORT}}
            SMTP_USER: ${{secrets.SMTP_USER}}
            SMTP_PASS: ${{secrets.SMTP_PASS}}
            AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
            AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            BUCKET_NAME: ${{secrets.BUCKET_NAME}}
            BUCKET_REGION: ${{secrets.BUCKET_REGION}}
            BUCKET_ACCESS_KEY: ${{secrets.BUCKET_ACCESS_KEY}}
            BUCKET_SECRET_ACCESS_KEY: ${{secrets.BUCKET_SECRET_ACCESS_KEY}}
          with:
            host: ${{ secrets.EC2_PUBLIC_IP }}
            username: ec2-user
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            script_stop: true
            envs: FOO,CLOUDFRONT_URL,MONGO_URI,jwtSecret,FDC_API_KEY,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,SESSION_SECRET,clientURI,serverURI,PORT,EMAIL_USER,EMAIL_PASS,SMTP_HOST,EMAIL_ADDRESS,EMAIL_PORT,SMTP_USER,SMTP_PASS,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,BUCKET_NAME,BUCKET_REGION,BUCKET_ACCESS_KEY,BUCKET_SECRET_ACCESS_KEY
            script: |
              echo "I am $FOO"
              echo "I am $MONGO_URI"
              whoami
              cd /home/ec2-user/app
              ls -al
#              npm run build
#              npm run start
              
